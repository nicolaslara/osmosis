name: Cosmwasm Contracts
on:
  pull_request:
  push:


jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workdir: [./x/ibc-rate-limit]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown

      - name: Build
        working-directory: ${{ matrix.workdir }}
        run: >
          rustup target add wasm32-unknown-unknown;
          cargo build --release --target wasm32-unknown-unknown

      - name: Test
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo test


  test-data:
    name: Make sure the test data is up to date
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workdir: [./x/ibc-rate-limit]
        output: [./testdata/rate_limiter.wasm]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build (optimized)
        working-directory: ${{ matrix.workdir }}
        run: >
          docker run --rm -v "$(pwd)":/code \
            --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
            --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
            cosmwasm/workspace-optimizer:0.12.6

      - name: Check Test Data
        working-directory: ${{ matrix.workdir }}
        if: ${{ matrix.output != null }}
        run: >
          ls -R .
  #          ls ${{ matrix.output }};
  #          ls ./artifacts;
  #          diff ${{ matrix.output }} ./artifacts/*.wasm



  lints:
    name: Cosmwasm Lints
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workdir: [./x/ibc-rate-limit]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          target: wasm32-unknown-unknown

      - name: Format
        working-directory: ${{ matrix.workdir }}
        run: >
          cargo fmt --all -- --check
